{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DataAnalysisRequest",
  "description": "Schema for a request sent from an Orchestrator to a Worker component to perform data analysis on a specified source. Defines the structure for initiating analysis tasks like summarization, tag generation, competency mapping, etc.",
  "type": "object",
  "properties": {
    "request_id": {
      "type": "string",
      "format": "uuid",
      "description": "Unique identifier (UUID v4 recommended) for this specific analysis request, used for tracking."
    },
    "data_source": {
      "type": "object",
      "description": "Specifies the source of the data to be analyzed.",
      "properties": {
        "source_type": {
          "type": "string",
          "description": "The type of the data source.",
          "enum": [
            "journal_entry_id",
            "journal_file_path",
            "guideline_doc_id",
            "guideline_file_path",
            "raw_text"
          ]
        },
        "identifier": { "type": "string", "description": "The specific ID (e.g., journal entry hash, fixed guideline ID) or file path corresponding to the source_type. Not required if source_type is 'raw_text'." }
      },
      "required": ["source_type"],
      "if": {
        "properties": {
          "source_type": {
            "not": {
              "const": "raw_text"
            }
          }
        }
      },
      "then": { "required": ["identifier"] },
      "else": { "not": { "required": ["identifier"] } }
    },
    "analysis_type": {
      "type": "string",
      "description": "The specific type of analysis requested. (Future types might include sentiment_analysis, topic_modeling, etc.)",
      "enum": [
        "generate_tags",
        "map_competencies",        # Identify predefined skills mentioned
        "summarize",           # Generate a concise summary
        "extract_key_information",
        "identify_trends"        # Analyze patterns over time (basic structure)
      ]
    },
      "parameters": { "type": "object",
      "description": "Parameters specific to the requested analysis_type. Structure varies.",
      "properties": { "raw_text_content": { "type": "string", "description": "The actual text content to analyze. Required only if data_source.source_type is 'raw_text'." } },
      "if": {
        "properties": {
          "data_source": { "properties": { "source_type": { "const": "raw_text" } } }
        },
        "required": ["data_source"] # Ensure data_source itself exists
      },
      "then": {
        "required": ["raw_text_content"]
      },
      # --- Conditional Parameters based on analysis_type ---
      "allOf": [
        {
          "if": {
            "properties": { "analysis_type": { "const": "generate_tags" } }
          },
          "then": {
            "properties": {
              "max_tags": {
                "type": "integer", "minimum": 1, "default": 10, "description": "Maximum number of relevant tags to generate."
              }
            }
          }
        },
        {
          "if": {
            "properties": { "analysis_type": { "const": "map_competencies" } }
          },
          "then": {
            "properties": {
              "focus_competencies": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Optional list of specific competencies (from config.py list) to primarily look for. Validation of values happens in worker code."
              }
              }
          }
        },
        {
          "if": {
            "properties": { "analysis_type": { "const": "summarize" } }
          },
          "then": {
            "properties": {
              "target_length_words": {
                "type": "integer",
                "minimum": 10, "default": 150, "description": "Approximate target length for the summary in words."
              },
              "summary_style": { "type": "string", "enum": [ "brief", "detailed", "bullet_points" ], "default": "brief", "description": "Desired style or level of detail for the summary."
              }
            }
          }
        },
        {
          "if": {
            "properties": { "analysis_type": { "const": "extract_key_information" } }
          },
          "then": {
            "properties": {
              "entities_to_extract": {
                "type": "array",
                "minItems": 1,
                "description": "A list of specific pieces of information to extract.",
                "items": {
                  "type": "object",
                  "properties": {
                    "entity_name": { "type": "string", "description": "A clear label or key for the information being extracted." },                  "entity_description": { "type": "string", "description": "A natural language description guiding the LLM on what specific information to find." },
                    "expected_format": { "type": "string", "enum": ["text", "number", "date", "list_of_text", "boolean"], "description": "Optional hint about the expected data type of the extracted value." }
                  },
                  "required": ["entity_name", "entity_description"]
                }
              
                
              }
            },
            "required": ["entities_to_extract"] # This whole structure is required for this analysis type
          }
        },
        {
          "if": {
            "properties": { "analysis_type": { "const": "identify_trends" } }
          },
          "then": {
            "properties": {
                "time_period": {
                "type": "object",
                  "properties": {
                    "start_date": {
                      "type": "string", "format": "date", "description": "Start date for the trend analysis (format: YYYY-MM-DD)."
                    },
                    "end_date": {
                      "type": "string", "format": "date", "description": "End date for the trend analysis (format: YYYY-MM-DD)."
                    }
                  },
                  "required": ["start_date", "end_date"],
                  "description": "Optional time period to focus the trend analysis."
                },
                "metrics": { "type": "array", "items": { "type": "string" }, "description": "Optional list of specific metrics or topics to track trends for. Value validation happens in worker code."
                }

             }
             # Peut-Ãªtre rendre time_period ou metrics requis ici ? Pour l'instant, optionnels.
          }
        }
      ]
    },
    "priority": {
      "type": "integer",
      "description": "Optional priority level (1-5, lower is less urgent).",
      "minimum": 1,
      "maximum": 5,
      "default": 3
    },
    "requestor_id": { "type": "string", "description": "Optional identifier of the component or process initiating the request." }
  },
  "required": [ "request_id", "data_source", "analysis_type", "parameters" ]